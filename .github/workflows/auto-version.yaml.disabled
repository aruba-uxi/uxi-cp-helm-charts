  ###########
  # v2.0.0
  # HOW TO ENABLE THIS WORKFLOW
  #---------------------------------
  # Pre Update Note:
  #----------------
  # We need to update to Chart version 13 and this requires us to stop using the imageTag in the global section of values.yaml
  # See the change here:
  # https://github.com/aruba-uxi/uxi-android-version-service/commit/e186bb1433e67198eca803112911c073ea1d5e84#diff-5c724de6bb1401299b6aa5e1fa1723ba9ae8c0e8eca9a0111132af22f7436396
  # You ONLY need to update
  # * Chart.yaml
  # * values.yaml
  # * values-production.yaml
  # * values-staging.yaml
  #---------------------------------
  # 1. Add your repositories config to pyproject.toml using this example:
  #    https://github.com/aruba-uxi/uxi-django-backend/blob/main/pyproject.toml#L64-L92
  # 2. Test the workflow by running it manually from the Actions tab
  # 3. Delete the old auto-version.yaml workflow file and rename this file to `auto-version.yaml`
  # 4. Delete the comment
  ###########
name: versioning
run-name: Artifact versioning

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      dev_version:
        description: "(Optional) Development version: {pr-number}.{count}"
        required: false
        type: string
      version_reset:
        description: "(Optional) Reset versions if a branch has updated versions"
        required: false
        type: boolean

permissions:
  contents: write

concurrency:
  group: versioning-artifacts
  cancel-in-progress: true

jobs:
  version-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Protect main branch
        if: github.ref != 'refs/heads/main' && inputs.dev_version == ''
        run: |
          echo "This workflow can only run on the main branch without a dev_version."
          exit 1

      - name: Protect main branch
        if: github.ref == 'refs/heads/main' && inputs.dev_version != ''
        run: |
          echo "This workflow can only run on the main branch without a dev_version."
          exit 1

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          token: ${{secrets.BUMPVERSION_GITHUB_TOKEN}}

      - name: install convco
        working-directory: /tmp
        run: |
          curl -OL https://github.com/convco/convco/releases/latest/download/convco-deb.zip
          unzip convco-deb.zip
          sudo dpkg -i convco*.deb

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: setup git
        run: |
          git config --global user.name 'UXI Bot'
          git config --global user.email 'aruba-uxi@users.noreply.github.com'

      - name: autoversioner
        id: autoversioner
        if: inputs.version_reset != true
        run: python -m tools.autoversion
        env:
          AUTOVERSION_REPO: ${{ github.repository }}
          AUTOVERSION_SLACK_URL: ${{ secrets.SLACK_PACKAGE_WEBHOOK }}
          PRE_RELEASE: ${{ inputs.dev_version }}

      - name: version reset
        id: version_reset
        run: python -m tools.autoversion --reset
        if: inputs.version_reset == true

      - name: push new commits
        run: git push --follow-tags
